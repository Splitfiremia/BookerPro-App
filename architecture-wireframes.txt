ARCHITECTURE WIREFRAMES - TheCut Beauty Services App
===================================================

1. APPLICATION ARCHITECTURE OVERVIEW
===================================

1.1 HIGH-LEVEL SYSTEM ARCHITECTURE
----------------------------------
┌─────────────────────────────────────────────────────────────┐
│                    TheCut Mobile App                        │
│                   (React Native + Expo)                    │
├─────────────────────────────────────────────────────────────┤
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │   Client    │  │  Provider   │  │    Shop Owner       │ │
│  │ Dashboard   │  │ Dashboard   │  │    Dashboard        │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                 Shared Components Layer                     │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ Navigation  │  │ UI Components│  │  Business Logic     │ │
│  │   System    │  │   Library    │  │    Providers        │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Data Management Layer                     │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ React Query │  │ AsyncStorage│  │   Mock Data         │ │
│  │ (Caching)   │  │(Persistence)│  │   Services          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                    Platform Layer                           │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │    iOS      │  │   Android   │  │        Web          │ │
│  │   Native    │  │   Native    │  │   (React Native     │ │
│  │             │  │             │  │       Web)          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
└─────────────────────────────────────────────────────────────┘

1.2 NAVIGATION ARCHITECTURE
--------------------------
Root Layout (_layout.tsx)
├── Authentication Flow
│   ├── Login Page (index.tsx)
│   └── Auth Layout ((auth)/_layout.tsx)
│       ├── Login ((auth)/login.tsx)
│       └── Signup ((auth)/signup.tsx)
├── Onboarding Flows
│   ├── Client Onboarding (client-onboarding/)
│   ├── Provider Onboarding (provider-onboarding/)
│   └── Shop Owner Onboarding (shop-owner-onboarding/)
└── Main Application ((app)/_layout.tsx)
    ├── Client Dashboard ((client)/)
    │   ├── Tabs Layout ((tabs)/_layout.tsx)
    │   │   ├── Home (home.tsx) - Dual CTA: Find Provider/Shop
    │   │   ├── Appointments (appointments.tsx)
    │   │   └── Profile (profile.tsx)
    │   ├── Shop Discovery
    │   │   ├── Shop Explore (shops/explore.tsx)
    │   │   └── Shop Profile (shops/[id].tsx)
    │   ├── Provider Profiles
    │   │   └── Enhanced Provider Profile (provider/[id].tsx)
    │   ├── Social Features
    │   │   └── Following List (following.tsx)
    │   └── Booking Flow
    │       ├── Service Selection (booking/select-service.tsx)
    │       ├── Date Selection (booking/select-date.tsx)
    │       ├── Time Selection (booking/select-time.tsx)
    │       └── Confirmation (booking/confirm.tsx)
    ├── Provider Dashboard ((provider)/)
    │   └── Tabs Layout ((tabs)/_layout.tsx)
    │       ├── Home (home.tsx)
    │       ├── Requests (requests.tsx)
    │       ├── Schedule (schedule.tsx)
    │       ├── Bio (bio.tsx) - Enhanced Profile Management
    │       ├── Clients (clients.tsx)
    │       ├── Earnings (earnings.tsx)
    │       └── Profile (provider-profile.tsx)
    └── Shop Owner Dashboard ((shop-owner)/)
        └── Tabs Layout ((tabs)/_layout.tsx)
            ├── Dashboard (dashboard.tsx)
            ├── Team (team.tsx)
            ├── Calendar (calendar.tsx)
            ├── Analytics (analytics.tsx)
            └── Settings (settings.tsx)

2. COMPONENT ARCHITECTURE
========================

2.1 COMPONENT HIERARCHY
-----------------------
┌─────────────────────────────────────────────────────────────┐
│                      App Root                               │
│                   (RootLayout)                              │
├─────────────────────────────────────────────────────────────┤
│                   Provider Layer                            │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │    Auth     │  │ Onboarding  │  │   Appointment       │ │
│  │  Provider   │  │  Provider   │  │    Provider         │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │  Services   │  │   Team      │  │    Location         │ │
│  │  Provider   │  │ Management  │  │    Provider         │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Screen Components                         │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │   Client    │  │  Provider   │  │   Shop Owner        │ │
│  │   Screens   │  │   Screens   │  │    Screens          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                  Shared Components                          │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ Form Input  │  │ Gradient    │  │   Modal             │ │
│  │ Components  │  │  Button     │  │ Components          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ Calendar    │  │ Analytics   │  │   Notification      │ │
│  │ Components  │  │ Components  │  │   Components        │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
└─────────────────────────────────────────────────────────────┘

2.2 STATE MANAGEMENT ARCHITECTURE
---------------------------------
┌─────────────────────────────────────────────────────────────┐
│                   Global State Layer                        │
├─────────────────────────────────────────────────────────────┤
│  Authentication State (AuthProvider)                       │
│  ├── User Information                                       │
│  ├── Authentication Status                                  │
│  ├── Developer Mode Toggle                                  │
│  └── Login/Logout Functions                                 │
├─────────────────────────────────────────────────────────────┤
│  Business Logic State                                       │
│  ├── AppointmentProvider (Booking Management)              │
│  ├── ServicesProvider (Service Management)                 │
│  ├── TeamManagementProvider (Team Operations)              │
│  ├── LocationProvider (Location Services)                  │
│  ├── OnboardingProvider (Onboarding Flow)                  │
│  ├── SocialProvider (Follow/Unfollow System)               │
│  ├── ShopManagementProvider (Shop Operations)              │
│  └── AvailabilityProvider (Slot Reservation System)        │
├─────────────────────────────────────────────────────────────┤
│  Data Caching Layer (React Query)                          │
│  ├── Server State Management                               │
│  ├── Background Sync                                       │
│  ├── Cache Invalidation                                    │
│  └── Optimistic Updates                                    │
├─────────────────────────────────────────────────────────────┤
│  Local Storage Layer (AsyncStorage)                        │
│  ├── User Preferences                                      │
│  ├── Authentication Tokens                                 │
│  ├── Offline Data Cache                                    │
│  └── App Settings                                          │
└─────────────────────────────────────────────────────────────┘

3. DATA FLOW ARCHITECTURE
========================

3.1 USER AUTHENTICATION FLOW
----------------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│    User     │───▶│    Login    │───▶│   AuthProvider      │
│   Input     │    │   Screen    │    │   Validation        │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ AsyncStorage│◀───│   Success   │◀───│   Mock Data         │
│   Storage   │    │ Response    │    │   Lookup            │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ Role-Based  │◀───│ Navigation  │◀───│   User Role         │
│ Dashboard   │    │ Redirect    │    │ Determination       │
└─────────────┘    └─────────────┘    └─────────────────────┘

3.2 APPOINTMENT BOOKING FLOW (DUAL PATH)
----------------------------------------

3.2.1 SHOP-FIRST DISCOVERY PATH
-------------------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Client    │───▶│    Shop     │───▶│   Provider          │
│   Browse    │    │ Selection   │    │  Selection          │
│   Shops     │    │ (Explore)   │    │ (From Shop Team)    │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Service   │◀───│  Enhanced   │◀───│   Provider          │
│ Selection   │    │  Provider   │    │   Profile           │
│             │    │  Profile    │    │ (Services/Portfolio)│
└─────────────┘    └─────────────┘    └─────────────────────┘

3.2.2 PROVIDER-FIRST DISCOVERY PATH
-----------------------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Client    │───▶│  Provider   │───▶│   Service           │
│  Browse     │    │ Selection   │    │  Selection          │
│ Providers   │    │ (Direct)    │    │                     │
└─────────────┘    └─────────────┘    └─────────────────────┘

3.2.3 UNIFIED BOOKING FLOW
--------------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Time      │◀───│    Date     │◀───│   Availability      │
│ Selection   │    │ Selection   │    │    Check            │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ Slot        │◀───│ Temporary   │◀───│   Slot              │
│ Reserved    │    │ Reservation │    │ Availability        │
│ (5 min)     │    │ (Pending)   │    │ Validation          │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ Appointment │◀───│  Payment    │◀───│   Booking           │
│ Confirmed   │    │ Processing  │    │ Confirmation        │
│             │    │ (Timer)     │    │ (5min countdown)    │
└─────────────┘    └─────────────┘    └─────────────────────┘

3.3 PROVIDER WORKFLOW
---------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│  Booking    │───▶│  Request    │───▶│   Provider          │
│  Request    │    │Notification │    │  Dashboard          │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Client    │◀───│   Accept/   │◀───│   Review &          │
│Notification │    │  Decline    │    │  Decision           │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│  Schedule   │◀───│ Appointment │◀───│   Confirmation      │
│  Update     │    │   Added     │    │   Processing        │
└─────────────┘    └─────────────┘    └─────────────────────┘

3.4 SOCIAL FEATURES FLOW
------------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│  Provider   │───▶│   Follow    │───▶│   SocialProvider    │
│  Profile    │    │   Button    │    │   State Update      │
│   View      │    │   Tap       │    │                     │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│AsyncStorage │◀───│  Follow     │◀───│   Follow/Unfollow   │
│ Persistence │    │  Status     │    │   Function Call     │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ Following   │◀───│   UI        │◀───│   Button State      │
│   List      │    │  Update     │    │   Update            │
│  Screen     │    │             │    │ (Follow/Following)  │
└─────────────┘    └─────────────┘    └─────────────────────┘

3.5 RESERVATION SYSTEM FLOW
---------------------------
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Time      │───▶│ Availability│───▶│   Slot              │
│ Selection   │    │   Check     │    │ Validation          │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ Temporary   │◀───│   Create    │◀───│   Available         │
│Appointment  │    │  Pending    │    │   Slot Found        │
│ (5 min)     │    │Appointment  │    │                     │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Timer     │───▶│  Payment    │───▶│   Confirmation      │
│ Countdown   │    │  Process    │    │   Screen            │
│ (5:00)      │    │             │    │                     │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│ Appointment │◀───│  Success    │◀───│   Payment           │
│ Confirmed   │    │ Response    │    │   Success           │
└─────────────┘    └─────────────┘    └─────────────────────┘
                                                │
                                                ▼
┌─────────────┐    ┌─────────────┐    ┌─────────────────────┐
│   Slot      │◀───│   Timer     │◀───│   Payment           │
│ Released    │    │  Expired    │    │   Failed            │
└─────────────┘    └─────────────┘    └─────────────────────┘

4. TECHNICAL ARCHITECTURE
========================

4.1 TECHNOLOGY STACK
-------------------
┌─────────────────────────────────────────────────────────────┐
│                    Frontend Layer                           │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ React Native│  │    Expo     │  │    TypeScript       │ │
│  │   v0.79.1   │  │   v53.0.4   │  │      v5.8.3         │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Navigation Layer                          │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ Expo Router │  │ React Nav   │  │   File-based        │ │
│  │   v5.0.3    │  │   v7.1.6    │  │    Routing          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                 State Management                            │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │React Query  │  │AsyncStorage │  │   Context API       │ │
│  │   v5.83.0   │  │   v2.1.2    │  │ + @nkzw/create-     │ │
│  │             │  │             │  │  context-hook       │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                    UI Components                            │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │   Lucide    │  │ NativeWind  │  │   Custom            │ │
│  │   Icons     │  │  (Tailwind) │  │  Components         │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Platform Support                          │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │     iOS     │  │   Android   │  │        Web          │ │
│  │   Native    │  │   Native    │  │  (React Native      │ │
│  │             │  │             │  │       Web)          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
└─────────────────────────────────────────────────────────────┘

4.2 DEVELOPMENT ARCHITECTURE
----------------------------
┌─────────────────────────────────────────────────────────────┐
│                 Development Environment                     │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │    Bun      │  │   ESLint    │  │    TypeScript       │ │
│  │ Package Mgr │  │   Linting   │  │   Type Checking     │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Build & Deploy                            │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ Expo CLI    │  │   Metro     │  │    Hot Reload       │ │
│  │   Build     │  │  Bundler    │  │   Development       │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                    Testing Strategy                         │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │   Manual    │  │  Component  │  │   Integration       │ │
│  │   Testing   │  │   Testing   │  │    Testing          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
└─────────────────────────────────────────────────────────────┘

5. SECURITY ARCHITECTURE
=======================

5.1 AUTHENTICATION SECURITY
---------------------------
┌─────────────────────────────────────────────────────────────┐
│                 Authentication Layer                        │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │   Login     │  │  Session    │  │    Role-Based       │ │
│  │Credentials  │  │ Management  │  │   Access Control    │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Data Protection                           │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │AsyncStorage │  │  Encrypted  │  │   Secure            │ │
│  │ Encryption  │  │ Transmission│  │  API Calls          │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                  Input Validation                           │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │   Form      │  │   Data      │  │    XSS              │ │
│  │Validation   │  │Sanitization │  │  Prevention         │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
└─────────────────────────────────────────────────────────────┘

6. PERFORMANCE ARCHITECTURE
==========================

6.1 OPTIMIZATION STRATEGIES
---------------------------
┌─────────────────────────────────────────────────────────────┐
│                   Rendering Layer                           │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ React.memo  │  │  useMemo    │  │   useCallback       │ │
│  │ Components  │  │ Optimization│  │  Optimization       │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                    Data Layer                               │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ React Query │  │   Lazy      │  │   Background        │ │
│  │   Caching   │  │  Loading    │  │     Sync            │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
├─────────────────────────────────────────────────────────────┤
│                   Image Optimization                        │
│  ┌─────────────┐  ┌─────────────┐  ┌─────────────────────┐ │
│  │ Expo Image  │  │Progressive  │  │    CDN              │ │
│  │ Component   │  │  Loading    │  │  Delivery           │ │
│  └─────────────┘  └─────────────┘  └─────────────────────┘ │
└─────────────────────────────────────────────────────────────┘

7. DATA MODEL ARCHITECTURE
==========================

7.1 CORE ENTITY RELATIONSHIPS
-----------------------------
┌─────────────────────────────────────────────────────────────┐
│                    Entity Relationship Model               │
├─────────────────────────────────────────────────────────────┤
│  Shop (1) ──────── (M) Provider ──────── (M) Service      │
│    │                    │                    │             │
│    │                    │                    │             │
│    ▼                    ▼                    ▼             │
│  ShopId[]           ProviderId[]         ServiceId[]       │
│  Address            Bio                  BasePrice         │
│  Hours              Portfolio[]          BaseDuration      │
│  Phone              Posts[]              Description       │
│                     FollowerCount                          │
│                     CustomPrices[]                         │
├─────────────────────────────────────────────────────────────┤
│  Appointment Entity                                         │
│  ├── ShopId (FK)                                           │
│  ├── ProviderId (FK)                                       │
│  ├── ServiceId (FK)                                        │
│  ├── ClientId (FK)                                         │
│  ├── DateTime                                              │
│  ├── Status ('requested'|'confirmed'|'completed'|'pending')│
│  └── PaymentStatus                                         │
├─────────────────────────────────────────────────────────────┤
│  Social Features                                            │
│  ├── User.followedProviders: ProviderId[]                  │
│  ├── Provider.isFollowed: boolean (computed)               │
│  ├── Provider.posts: Post[]                                │
│  └── Provider.portfolio: Image[]                           │
└─────────────────────────────────────────────────────────────┘

7.2 RESERVATION SYSTEM ARCHITECTURE
-----------------------------------
┌─────────────────────────────────────────────────────────────┐
│                 Slot Reservation Logic                     │
├─────────────────────────────────────────────────────────────┤
│  checkAndReserveSlot(providerId, shopId, datetime)         │
│  ├── 1. Availability Validation                            │
│  │   └── Query existing appointments for conflicts         │
│  ├── 2. Temporary Reservation                              │
│  │   └── Create 'pending' appointment (5min TTL)          │
│  ├── 3. Timer Management                                   │
│  │   └── Countdown timer in UI (5:00 → 0:00)             │
│  ├── 4. Payment Processing                                 │
│  │   ├── Success → Status: 'confirmed'                    │
│  │   └── Failure → Remove 'pending' appointment           │
│  └── 5. Automatic Cleanup                                  │
│      └── Timer expiry → Release reserved slot             │
├─────────────────────────────────────────────────────────────┤
│  React Query Integration                                    │
│  ├── useMutation: reserveSlot                             │
│  ├── useMutation: confirmAppointment                      │
│  ├── useMutation: releaseSlot                             │
│  └── useQuery: checkAvailability                          │
└─────────────────────────────────────────────────────────────┘

8. ENHANCED COMPONENT ARCHITECTURE
=================================

8.1 PROVIDER PROFILE COMPONENTS
-------------------------------
┌─────────────────────────────────────────────────────────────┐
│                Enhanced Provider Profile                   │
├─────────────────────────────────────────────────────────────┤
│  Header Section                                             │
│  ├── Provider Avatar                                       │
│  ├── Provider Name                                         │
│  └── Follow/Following Button (Social Integration)          │
├─────────────────────────────────────────────────────────────┤
│  Stats Bar                                                  │
│  ├── Follower Count                                        │
│  ├── Post Count                                            │
│  └── Star Rating                                           │
├─────────────────────────────────────────────────────────────┤
│  Tab Navigation                                             │
│  ├── Services Tab                                          │
│  │   ├── Service List with Custom Pricing                 │
│  │   └── Tap-to-Book Integration                          │
│  ├── Portfolio Tab                                         │
│  │   └── Image Grid/Carousel                              │
│  └── Posts Tab                                             │
│      └── Social Feed (Image + Caption)                    │
├─────────────────────────────────────────────────────────────┤
│  Fixed Bottom Action                                        │
│  └── "Book Now" Button                                     │
└─────────────────────────────────────────────────────────────┘

8.2 SHOP DISCOVERY COMPONENTS
-----------------------------
┌─────────────────────────────────────────────────────────────┐
│                  Shop Discovery System                     │
├─────────────────────────────────────────────────────────────┤
│  Shop Explore Screen                                        │
│  ├── Search/Filter Bar                                     │
│  ├── Shop Cards List                                       │
│  │   ├── Shop Name & Address                              │
│  │   ├── Average Rating                                   │
│  │   ├── Featured Providers Preview                       │
│  │   └── Tap → Shop Profile                               │
│  └── Map View Toggle (Future Enhancement)                  │
├─────────────────────────────────────────────────────────────┤
│  Shop Profile Screen                                        │
│  ├── Shop Header (Name, Address, Hours)                   │
│  ├── Shop Stats (Rating, Reviews)                         │
│  ├── Team Section                                          │
│  │   ├── Provider Cards Grid                              │
│  │   └── Tap → Enhanced Provider Profile                  │
│  ├── Services Overview                                     │
│  └── Contact Information                                   │
└─────────────────────────────────────────────────────────────┘

This comprehensive architecture wireframe now includes all the latest enhancements: shop-first discovery, social features, enhanced provider profiles, and the robust reservation system that prevents double-booking through temporary slot reservations.